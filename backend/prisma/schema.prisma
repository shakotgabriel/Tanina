generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  accounts  Account[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Account {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  balance   Float    @default(0.0)
  debits    Debit[]
  credits   Credit[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Transaction {
  id          Int      @id @default(autoincrement())
  type        OperationType
  status      TransactionStatus @default(PENDING)
  debits      Debit[]
  credits     Credit[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime? @updatedAt
}

model Debit {
  id          Int      @id @default(autoincrement())
  amount      Float
  accountId   Int
  account     Account  @relation(fields: [accountId], references: [id])
  transactionId Int
  transaction Transaction @relation(fields: [transactionId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime? @updatedAt
}

model Credit {
  id          Int      @id @default(autoincrement())
  amount      Float
  accountId   Int
  account     Account  @relation(fields: [accountId], references: [id])
  transactionId Int
  transaction Transaction @relation(fields: [transactionId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime? @updatedAt
}

enum OperationType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}